
service namd : mariadb2-test

config Map : mariadb2-test-mariadb

Deployments : mariadb2-test-mariadb

Persistent Volume Claims : mariadb2-test-pvc

Pods : mariadb2-test-mariadb-75c6844b88-x4c9g

Replica Sets : mariadb2-test-mariadb-75c6844b88

Secrets : mariadb2-test-mariadb

Services : mariadb2-test-mariadb

mariadb89-test-mariadb-654cc44995	ReplicaSet(apiVersion=extensions/v1beta1, kind=ReplicaSet, metadata=ObjectMeta(annotations={deployment.kubernetes.io/desired-replicas=1, deployment.kubernetes.io/max-replicas=2, deployment.kubernetes.io/revision=1}, clusterName=null, creationTimestamp=2018-04-26T04:00:49Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=1, initializers=null, labels={app=mariadb89-test-mariadb, pod-template-hash=2107700551}, name=mariadb89-test-mariadb-654cc44995, namespace=zdb-maria, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=Deployment, name=mariadb89-test-mariadb, uid=67dfe617-4906-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=209589, selfLink=/apis/extensions/v1beta1/namespaces/zdb-maria/replicasets/mariadb89-test-mariadb-654cc44995, uid=67e05c27-4906-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=ReplicaSetSpec(minReadySeconds=null, replicas=1, selector=LabelSelector(matchExpressions=[], matchLabels={app=mariadb89-test-mariadb, pod-template-hash=2107700551}, additionalProperties={}), template=PodTemplateSpec(metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=null, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels={app=mariadb89-test-mariadb, pod-template-hash=2107700551}, name=null, namespace=null, ownerReferences=[], resourceVersion=null, selfLink=null, uid=null, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=MARIADB_ROOT_PASSWORD, value=null, valueFrom=EnvVarSource(configMapKeyRef=null, fieldRef=null, resourceFieldRef=null, secretKeyRef=SecretKeySelector(key=mariadb-root-password, name=mariadb89-test-mariadb, optional=null, additionalProperties={}), additionalProperties={}), additionalProperties={}), EnvVar(name=MARIADB_PASSWORD, value=null, valueFrom=EnvVarSource(configMapKeyRef=null, fieldRef=null, resourceFieldRef=null, secretKeyRef=SecretKeySelector(key=mariadb-password, name=mariadb89-test-mariadb, optional=null, additionalProperties={}), additionalProperties={}), additionalProperties={}), EnvVar(name=MARIADB_USER, value=admin, valueFrom=null, additionalProperties={}), EnvVar(name=MARIADB_DATABASE, value=zdb-test, valueFrom=null, additionalProperties={})], envFrom=[], image=bitnami/mariadb:10.1.31-r2, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=Probe(exec=ExecAction(command=[mysqladmin, ping], additionalProperties={}), failureThreshold=3, httpGet=null, initialDelaySeconds=30, periodSeconds=10, successThreshold=1, tcpSocket=null, timeoutSeconds=5, additionalProperties={}), name=mariadb, ports=[ContainerPort(containerPort=3306, hostIP=null, hostPort=null, name=mysql, protocol=TCP, additionalProperties={})], readinessProbe=Probe(exec=ExecAction(command=[mysqladmin, ping], additionalProperties={}), failureThreshold=3, httpGet=null, initialDelaySeconds=5, periodSeconds=10, successThreshold=1, tcpSocket=null, timeoutSeconds=1, additionalProperties={}), resources=ResourceRequirements(limits=null, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=256Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/bitnami/mariadb, name=data, readOnly=null, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[Container(args=[], command=[sh, -c, mkdir -p /bitnami/mariadb/conf && cp /bitnami/mariadb_config/my.cnf /bitnami/mariadb/conf/my_custom.cnf && chown 1001:1001 -R /bitnami/mariadb], env=[], envFrom=[], image=busybox, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=copy-custom-config, ports=[], readinessProbe=null, resources=ResourceRequirements(limits=null, requests=null, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/bitnami/mariadb_config, name=config, readOnly=null, subPath=null, additionalProperties={}), VolumeMount(mountPath=/bitnami/mariadb, name=data, readOnly=null, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], nodeName=null, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=null, serviceAccountName=null, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=ConfigMapVolumeSource(defaultMode=420, items=[], name=mariadb89-test-mariadb, optional=null, additionalProperties={}), downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=config, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={}), Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=data, nfs=null, persistentVolumeClaim=PersistentVolumeClaimVolumeSource(claimName=mariadb89-test-pvc, readOnly=null, additionalProperties={}), photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), additionalProperties={}), additionalProperties={}), status=ReplicaSetStatus(availableReplicas=1, conditions=[], fullyLabeledReplicas=1, observedGeneration=1, readyReplicas=1, replicas=1, additionalProperties={}), additionalProperties={})

mariadb89-test-mariadb-654cc44995-wj6tv	Pod(apiVersion=v1, kind=Pod, metadata=ObjectMeta(annotations={kubernetes.io/created-by={"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"zdb-maria","name":"mariadb89-test-mariadb-654cc44995","uid":"67e05c27-4906-11e8-8690-daf654bc1ef2","apiVersion":"extensions","resourceVersion":"209557"}}}, clusterName=null, creationTimestamp=2018-04-26T04:00:49Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=mariadb89-test-mariadb-654cc44995-, generation=null, initializers=null, labels={app=mariadb89-test-mariadb, pod-template-hash=2107700551}, name=mariadb89-test-mariadb-654cc44995-wj6tv, namespace=zdb-maria, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=ReplicaSet, name=mariadb89-test-mariadb-654cc44995, uid=67e05c27-4906-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=209588, selfLink=/api/v1/namespaces/zdb-maria/pods/mariadb89-test-mariadb-654cc44995-wj6tv, uid=67e11b8f-4906-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=MARIADB_ROOT_PASSWORD, value=null, valueFrom=EnvVarSource(configMapKeyRef=null, fieldRef=null, resourceFieldRef=null, secretKeyRef=SecretKeySelector(key=mariadb-root-password, name=mariadb89-test-mariadb, optional=null, additionalProperties={}), additionalProperties={}), additionalProperties={}), EnvVar(name=MARIADB_PASSWORD, value=null, valueFrom=EnvVarSource(configMapKeyRef=null, fieldRef=null, resourceFieldRef=null, secretKeyRef=SecretKeySelector(key=mariadb-password, name=mariadb89-test-mariadb, optional=null, additionalProperties={}), additionalProperties={}), additionalProperties={}), EnvVar(name=MARIADB_USER, value=admin, valueFrom=null, additionalProperties={}), EnvVar(name=MARIADB_DATABASE, value=zdb-test, valueFrom=null, additionalProperties={})], envFrom=[], image=bitnami/mariadb:10.1.31-r2, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=Probe(exec=ExecAction(command=[mysqladmin, ping], additionalProperties={}), failureThreshold=3, httpGet=null, initialDelaySeconds=30, periodSeconds=10, successThreshold=1, tcpSocket=null, timeoutSeconds=5, additionalProperties={}), name=mariadb, ports=[ContainerPort(containerPort=3306, hostIP=null, hostPort=null, name=mysql, protocol=TCP, additionalProperties={})], readinessProbe=Probe(exec=ExecAction(command=[mysqladmin, ping], additionalProperties={}), failureThreshold=3, httpGet=null, initialDelaySeconds=5, periodSeconds=10, successThreshold=1, tcpSocket=null, timeoutSeconds=1, additionalProperties={}), resources=ResourceRequirements(limits=null, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=256Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/bitnami/mariadb, name=data, readOnly=null, subPath=null, additionalProperties={}), VolumeMount(mountPath=/var/run/secrets/kubernetes.io/serviceaccount, name=default-token-vvclf, readOnly=true, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[Container(args=[], command=[sh, -c, mkdir -p /bitnami/mariadb/conf && cp /bitnami/mariadb_config/my.cnf /bitnami/mariadb/conf/my_custom.cnf && chown 1001:1001 -R /bitnami/mariadb], env=[], envFrom=[], image=busybox, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=copy-custom-config, ports=[], readinessProbe=null, resources=ResourceRequirements(limits=null, requests=null, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/bitnami/mariadb_config, name=config, readOnly=null, subPath=null, additionalProperties={}), VolumeMount(mountPath=/bitnami/mariadb, name=data, readOnly=null, subPath=null, additionalProperties={}), VolumeMount(mountPath=/var/run/secrets/kubernetes.io/serviceaccount, name=default-token-vvclf, readOnly=true, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], nodeName=10.178.218.185, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=default, serviceAccountName=default, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/notReady, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={}), Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/unreachable, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={})], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=ConfigMapVolumeSource(defaultMode=420, items=[], name=mariadb89-test-mariadb, optional=null, additionalProperties={}), downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=config, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={}), Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=data, nfs=null, persistentVolumeClaim=PersistentVolumeClaimVolumeSource(claimName=mariadb89-test-pvc, readOnly=null, additionalProperties={}), photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={}), Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=default-token-vvclf, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=SecretVolumeSource(defaultMode=420, items=[], optional=null, secretName=default-token-vvclf, additionalProperties={}), storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), status=PodStatus(conditions=[PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T04:00:52Z, message=null, reason=null, status=True, type=Initialized, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T04:01:08Z, message=null, reason=null, status=True, type=Ready, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T04:00:49Z, message=null, reason=null, status=True, type=PodScheduled, additionalProperties={})], containerStatuses=[ContainerStatus(containerID=docker://d4baca6edb4e7a319cc7a7d701f8047c582c275b2029e32d8c9f2fff2434e63d, image=bitnami/mariadb:10.1.31-r2, imageID=docker-pullable://bitnami/mariadb@sha256:86e5d5467e2f998bcedad4c04d76c10288fd820b9711b1bdd49851e97e66d35c, lastState=ContainerState(running=null, terminated=null, waiting=null, additionalProperties={}), name=mariadb, ready=true, restartCount=0, state=ContainerState(running=ContainerStateRunning(startedAt=2018-04-26T04:00:53Z, additionalProperties={}), terminated=null, waiting=null, additionalProperties={}), additionalProperties={})], hostIP=10.178.218.185, initContainerStatuses=[ContainerStatus(containerID=docker://0b2298938cdbfe643078563f8ed04640b166625df3be1c5795f755b1d919cd30, image=busybox:latest, imageID=docker-pullable://busybox@sha256:58ac43b2cc92c687a32c8be6278e50a063579655fe3090125dcb2af0ff9e1a64, lastState=ContainerState(running=null, terminated=null, waiting=null, additionalProperties={}), name=copy-custom-config, ready=true, restartCount=0, state=ContainerState(running=null, terminated=ContainerStateTerminated(containerID=docker://0b2298938cdbfe643078563f8ed04640b166625df3be1c5795f755b1d919cd30, exitCode=0, finishedAt=2018-04-26T04:00:51Z, message=null, reason=Completed, signal=null, startedAt=2018-04-26T04:00:50Z, additionalProperties={}), waiting=null, additionalProperties={}), additionalProperties={})], message=null, phase=Running, podIP=172.30.22.163, qosClass=Burstable, reason=null, startTime=2018-04-26T04:00:49Z, additionalProperties={}), additionalProperties={})

mariadb89-test-mariadb	Deployment(apiVersion=extensions/v1beta1, kind=Deployment, metadata=ObjectMeta(annotations={deployment.kubernetes.io/revision=1}, clusterName=null, creationTimestamp=2018-04-26T04:00:49Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=1, initializers=null, labels={app=mariadb89-test-mariadb, chart=mariadb-2.1.6, heritage=Tiller, release=mariadb89-test}, name=mariadb89-test-mariadb, namespace=zdb-maria, ownerReferences=[], resourceVersion=209591, selfLink=/apis/extensions/v1beta1/namespaces/zdb-maria/deployments/mariadb89-test-mariadb, uid=67dfe617-4906-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=DeploymentSpec(minReadySeconds=null, paused=null, progressDeadlineSeconds=null, replicas=1, revisionHistoryLimit=null, rollbackTo=null, selector=LabelSelector(matchExpressions=[], matchLabels={app=mariadb89-test-mariadb}, additionalProperties={}), strategy=DeploymentStrategy(rollingUpdate=RollingUpdateDeployment(maxSurge=IntOrString(IntVal=1, Kind=null, StrVal=null, additionalProperties={}), maxUnavailable=IntOrString(IntVal=1, Kind=null, StrVal=null, additionalProperties={}), additionalProperties={}), type=RollingUpdate, additionalProperties={}), template=PodTemplateSpec(metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=null, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels={app=mariadb89-test-mariadb}, name=null, namespace=null, ownerReferences=[], resourceVersion=null, selfLink=null, uid=null, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=MARIADB_ROOT_PASSWORD, value=null, valueFrom=EnvVarSource(configMapKeyRef=null, fieldRef=null, resourceFieldRef=null, secretKeyRef=SecretKeySelector(key=mariadb-root-password, name=mariadb89-test-mariadb, optional=null, additionalProperties={}), additionalProperties={}), additionalProperties={}), EnvVar(name=MARIADB_PASSWORD, value=null, valueFrom=EnvVarSource(configMapKeyRef=null, fieldRef=null, resourceFieldRef=null, secretKeyRef=SecretKeySelector(key=mariadb-password, name=mariadb89-test-mariadb, optional=null, additionalProperties={}), additionalProperties={}), additionalProperties={}), EnvVar(name=MARIADB_USER, value=admin, valueFrom=null, additionalProperties={}), EnvVar(name=MARIADB_DATABASE, value=zdb-test, valueFrom=null, additionalProperties={})], envFrom=[], image=bitnami/mariadb:10.1.31-r2, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=Probe(exec=ExecAction(command=[mysqladmin, ping], additionalProperties={}), failureThreshold=3, httpGet=null, initialDelaySeconds=30, periodSeconds=10, successThreshold=1, tcpSocket=null, timeoutSeconds=5, additionalProperties={}), name=mariadb, ports=[ContainerPort(containerPort=3306, hostIP=null, hostPort=null, name=mysql, protocol=TCP, additionalProperties={})], readinessProbe=Probe(exec=ExecAction(command=[mysqladmin, ping], additionalProperties={}), failureThreshold=3, httpGet=null, initialDelaySeconds=5, periodSeconds=10, successThreshold=1, tcpSocket=null, timeoutSeconds=1, additionalProperties={}), resources=ResourceRequirements(limits=null, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=256Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/bitnami/mariadb, name=data, readOnly=null, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[Container(args=[], command=[sh, -c, mkdir -p /bitnami/mariadb/conf && cp /bitnami/mariadb_config/my.cnf /bitnami/mariadb/conf/my_custom.cnf && chown 1001:1001 -R /bitnami/mariadb], env=[], envFrom=[], image=busybox, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=copy-custom-config, ports=[], readinessProbe=null, resources=ResourceRequirements(limits=null, requests=null, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/bitnami/mariadb_config, name=config, readOnly=null, subPath=null, additionalProperties={}), VolumeMount(mountPath=/bitnami/mariadb, name=data, readOnly=null, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], nodeName=null, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=null, serviceAccountName=null, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=ConfigMapVolumeSource(defaultMode=420, items=[], name=mariadb89-test-mariadb, optional=null, additionalProperties={}), downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=config, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={}), Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=data, nfs=null, persistentVolumeClaim=PersistentVolumeClaimVolumeSource(claimName=mariadb89-test-pvc, readOnly=null, additionalProperties={}), photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), additionalProperties={}), additionalProperties={}), status=DeploymentStatus(availableReplicas=1, collisionCount=null, conditions=[DeploymentCondition(lastTransitionTime=2018-04-26T04:00:49Z, lastUpdateTime=2018-04-26T04:00:49Z, message=Deployment has minimum availability., reason=MinimumReplicasAvailable, status=True, type=Available, additionalProperties={})], observedGeneration=1, readyReplicas=1, replicas=1, unavailableReplicas=null, updatedReplicas=1, additionalProperties={}), additionalProperties={})

mariadb89-test-mariadb	Service(apiVersion=v1, kind=Service, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-04-26T04:00:49Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels={app=mariadb89-test-mariadb, chart=mariadb-2.1.6, heritage=Tiller, release=mariadb89-test}, name=mariadb89-test-mariadb, namespace=zdb-maria, ownerReferences=[], resourceVersion=209554, selfLink=/api/v1/namespaces/zdb-maria/services/mariadb89-test-mariadb, uid=67de3aff-4906-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=ServiceSpec(clusterIP=172.21.60.228, externalIPs=[], externalName=null, externalTrafficPolicy=null, healthCheckNodePort=null, loadBalancerIP=null, loadBalancerSourceRanges=[], ports=[ServicePort(name=mysql, nodePort=null, port=3306, protocol=TCP, targetPort=IntOrString(IntVal=null, Kind=null, StrVal=mysql, additionalProperties={}), additionalProperties={})], selector={app=mariadb89-test-mariadb}, sessionAffinity=None, type=ClusterIP, additionalProperties={}), status=ServiceStatus(loadBalancer=LoadBalancerStatus(ingress=[], additionalProperties={}), additionalProperties={}), additionalProperties={})

-----------------------------

nspark-redis-test2-redis-ha-sentinel-5c7b956f7c	ReplicaSet(apiVersion=extensions/v1beta1, kind=ReplicaSet, metadata=ObjectMeta(annotations={deployment.kubernetes.io/desired-replicas=3, deployment.kubernetes.io/max-replicas=4, deployment.kubernetes.io/revision=1}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=1, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=nspark-redis-test2-redis-ha-sentinel, pod-template-hash=1736512937, release=nspark-redis-test2}, name=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c, namespace=zdb-redis, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=Deployment, name=nspark-redis-test2-redis-ha-sentinel, uid=52281275-48e7-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=204064, selfLink=/apis/extensions/v1beta1/namespaces/zdb-redis/replicasets/nspark-redis-test2-redis-ha-sentinel-5c7b956f7c, uid=52288090-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=ReplicaSetSpec(minReadySeconds=null, replicas=3, selector=LabelSelector(matchExpressions=[], matchLabels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=nspark-redis-test2-redis-ha-sentinel, pod-template-hash=1736512937, release=nspark-redis-test2}, additionalProperties={}), template=PodTemplateSpec(metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=null, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=nspark-redis-test2-redis-ha-sentinel, pod-template-hash=1736512937, release=nspark-redis-test2}, name=null, namespace=null, ownerReferences=[], resourceVersion=null, selfLink=null, uid=null, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=SENTINEL, value=true, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=sentinel, ports=[ContainerPort(containerPort=26379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=null, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[], volumes=[], additionalProperties={}), additionalProperties={}), additionalProperties={}), status=ReplicaSetStatus(availableReplicas=3, conditions=[], fullyLabeledReplicas=3, observedGeneration=1, readyReplicas=3, replicas=3, additionalProperties={}), additionalProperties={})
nspark-redis-test2-redis-ha-server-7c94c88ddc	ReplicaSet(apiVersion=extensions/v1beta1, kind=ReplicaSet, metadata=ObjectMeta(annotations={deployment.kubernetes.io/desired-replicas=3, deployment.kubernetes.io/max-replicas=4, deployment.kubernetes.io/revision=1}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=1, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-server, pod-template-hash=3750744887, redis-node=true, release=nspark-redis-test2}, name=nspark-redis-test2-redis-ha-server-7c94c88ddc, namespace=zdb-redis, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=Deployment, name=nspark-redis-test2-redis-ha-server, uid=5228f5b9-48e7-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=204056, selfLink=/apis/extensions/v1beta1/namespaces/zdb-redis/replicasets/nspark-redis-test2-redis-ha-server-7c94c88ddc, uid=52297e7d-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=ReplicaSetSpec(minReadySeconds=null, replicas=3, selector=LabelSelector(matchExpressions=[], matchLabels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-server, pod-template-hash=3750744887, redis-node=true, release=nspark-redis-test2}, additionalProperties={}), template=PodTemplateSpec(metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=null, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-server, pod-template-hash=3750744887, redis-node=true, release=nspark-redis-test2}, name=null, namespace=null, ownerReferences=[], resourceVersion=null, selfLink=null, uid=null, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=REDIS_SENTINEL_SERVICE_HOST, value=redis-sentinel, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=redis, ports=[ContainerPort(containerPort=6379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=700Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/redis-master-data, name=data, readOnly=null, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=null, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=EmptyDirVolumeSource(medium=null, sizeLimit=null, additionalProperties={}), fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=data, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), additionalProperties={}), additionalProperties={}), status=ReplicaSetStatus(availableReplicas=3, conditions=[], fullyLabeledReplicas=3, observedGeneration=1, readyReplicas=3, replicas=3, additionalProperties={}), additionalProperties={})


nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-5ntxj	Pod(apiVersion=v1, kind=Pod, metadata=ObjectMeta(annotations={kubernetes.io/created-by={"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"zdb-redis","name":"nspark-redis-test2-redis-ha-sentinel-5c7b956f7c","uid":"52288090-48e7-11e8-8690-daf654bc1ef2","apiVersion":"extensions","resourceVersion":"203939"}}}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=nspark-redis-test2-redis-ha-sentinel, pod-template-hash=1736512937, podIP=172.30.230.13, redis-role=sentinel, release=nspark-redis-test2}, name=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-5ntxj, namespace=zdb-redis, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=ReplicaSet, name=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c, uid=52288090-48e7-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=204042, selfLink=/api/v1/namespaces/zdb-redis/pods/nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-5ntxj, uid=5229414f-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=SENTINEL, value=true, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=sentinel, ports=[ContainerPort(containerPort=26379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/var/run/secrets/kubernetes.io/serviceaccount, name=nspark-redis-test2-redis-ha-token-d9lqp, readOnly=true, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=10.178.218.160, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/notReady, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={}), Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/unreachable, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={})], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=nspark-redis-test2-redis-ha-token-d9lqp, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=SecretVolumeSource(defaultMode=420, items=[], optional=null, secretName=nspark-redis-test2-redis-ha-token-d9lqp, additionalProperties={}), storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), status=PodStatus(conditions=[PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=Initialized, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:44Z, message=null, reason=null, status=True, type=Ready, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=PodScheduled, additionalProperties={})], containerStatuses=[ContainerStatus(containerID=docker://a7a76ea1a48d174efc4bd7336a236f6fd55d2f975a2cae5ffdaa4c4cf259e022, image=quay.io/smile/redis:4.0.8r0, imageID=docker-pullable://quay.io/smile/redis@sha256:1657908f7af7295529f40cfc84ae9ed0f2c24b57aa7e60feed9a84f2bb2658ec, lastState=ContainerState(running=null, terminated=null, waiting=null, additionalProperties={}), name=sentinel, ready=true, restartCount=0, state=ContainerState(running=ContainerStateRunning(startedAt=2018-04-26T00:18:44Z, additionalProperties={}), terminated=null, waiting=null, additionalProperties={}), additionalProperties={})], hostIP=10.178.218.160, initContainerStatuses=[], message=null, phase=Running, podIP=172.30.230.13, qosClass=Burstable, reason=null, startTime=2018-04-26T00:18:18Z, additionalProperties={}), additionalProperties={})
nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-b2kgm	Pod(apiVersion=v1, kind=Pod, metadata=ObjectMeta(annotations={kubernetes.io/created-by={"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"zdb-redis","name":"nspark-redis-test2-redis-ha-sentinel-5c7b956f7c","uid":"52288090-48e7-11e8-8690-daf654bc1ef2","apiVersion":"extensions","resourceVersion":"203939"}}}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=nspark-redis-test2-redis-ha-sentinel, pod-template-hash=1736512937, podIP=172.30.22.148, redis-role=sentinel, release=nspark-redis-test2}, name=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-b2kgm, namespace=zdb-redis, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=ReplicaSet, name=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c, uid=52288090-48e7-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=204062, selfLink=/api/v1/namespaces/zdb-redis/pods/nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-b2kgm, uid=5229b337-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=SENTINEL, value=true, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=sentinel, ports=[ContainerPort(containerPort=26379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/var/run/secrets/kubernetes.io/serviceaccount, name=nspark-redis-test2-redis-ha-token-d9lqp, readOnly=true, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=10.178.218.185, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/notReady, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={}), Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/unreachable, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={})], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=nspark-redis-test2-redis-ha-token-d9lqp, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=SecretVolumeSource(defaultMode=420, items=[], optional=null, secretName=nspark-redis-test2-redis-ha-token-d9lqp, additionalProperties={}), storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), status=PodStatus(conditions=[PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=Initialized, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:47Z, message=null, reason=null, status=True, type=Ready, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=PodScheduled, additionalProperties={})], containerStatuses=[ContainerStatus(containerID=docker://2d73144cd3d0102b93a338ef3c117448d3b7977d551c0e4a20f87e29e24cc80a, image=quay.io/smile/redis:4.0.8r0, imageID=docker-pullable://quay.io/smile/redis@sha256:1657908f7af7295529f40cfc84ae9ed0f2c24b57aa7e60feed9a84f2bb2658ec, lastState=ContainerState(running=null, terminated=null, waiting=null, additionalProperties={}), name=sentinel, ready=true, restartCount=0, state=ContainerState(running=ContainerStateRunning(startedAt=2018-04-26T00:18:46Z, additionalProperties={}), terminated=null, waiting=null, additionalProperties={}), additionalProperties={})], hostIP=10.178.218.185, initContainerStatuses=[], message=null, phase=Running, podIP=172.30.22.148, qosClass=Burstable, reason=null, startTime=2018-04-26T00:18:18Z, additionalProperties={}), additionalProperties={})
nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-lzcz5	Pod(apiVersion=v1, kind=Pod, metadata=ObjectMeta(annotations={kubernetes.io/created-by={"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"zdb-redis","name":"nspark-redis-test2-redis-ha-sentinel-5c7b956f7c","uid":"52288090-48e7-11e8-8690-daf654bc1ef2","apiVersion":"extensions","resourceVersion":"203939"}}}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=nspark-redis-test2-redis-ha-sentinel, pod-template-hash=1736512937, podIP=172.30.230.12, redis-role=sentinel, release=nspark-redis-test2}, name=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-lzcz5, namespace=zdb-redis, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=ReplicaSet, name=nspark-redis-test2-redis-ha-sentinel-5c7b956f7c, uid=52288090-48e7-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=204020, selfLink=/api/v1/namespaces/zdb-redis/pods/nspark-redis-test2-redis-ha-sentinel-5c7b956f7c-lzcz5, uid=5229cbfe-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=SENTINEL, value=true, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=sentinel, ports=[ContainerPort(containerPort=26379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/var/run/secrets/kubernetes.io/serviceaccount, name=nspark-redis-test2-redis-ha-token-d9lqp, readOnly=true, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=10.178.218.160, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/notReady, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={}), Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/unreachable, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={})], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=nspark-redis-test2-redis-ha-token-d9lqp, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=SecretVolumeSource(defaultMode=420, items=[], optional=null, secretName=nspark-redis-test2-redis-ha-token-d9lqp, additionalProperties={}), storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), status=PodStatus(conditions=[PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=Initialized, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:41Z, message=null, reason=null, status=True, type=Ready, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=PodScheduled, additionalProperties={})], containerStatuses=[ContainerStatus(containerID=docker://3e50e7a4c3c6333ed36b05ac1d151b335b0033ff2a86936405c3447cf4fb1c24, image=quay.io/smile/redis:4.0.8r0, imageID=docker-pullable://quay.io/smile/redis@sha256:1657908f7af7295529f40cfc84ae9ed0f2c24b57aa7e60feed9a84f2bb2658ec, lastState=ContainerState(running=null, terminated=null, waiting=null, additionalProperties={}), name=sentinel, ready=true, restartCount=0, state=ContainerState(running=ContainerStateRunning(startedAt=2018-04-26T00:18:41Z, additionalProperties={}), terminated=null, waiting=null, additionalProperties={}), additionalProperties={})], hostIP=10.178.218.160, initContainerStatuses=[], message=null, phase=Running, podIP=172.30.230.12, qosClass=Burstable, reason=null, startTime=2018-04-26T00:18:18Z, additionalProperties={}), additionalProperties={})
nspark-redis-test2-redis-ha-server-7c94c88ddc-bfd4w	Pod(apiVersion=v1, kind=Pod, metadata=ObjectMeta(annotations={kubernetes.io/created-by={"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"zdb-redis","name":"nspark-redis-test2-redis-ha-server-7c94c88ddc","uid":"52297e7d-48e7-11e8-8690-daf654bc1ef2","apiVersion":"extensions","resourceVersion":"203944"}}}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=nspark-redis-test2-redis-ha-server-7c94c88ddc-, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-server, pod-template-hash=3750744887, podIP=172.30.230.14, redis-node=true, redis-role=slave, release=nspark-redis-test2, runID=2da056}, name=nspark-redis-test2-redis-ha-server-7c94c88ddc-bfd4w, namespace=zdb-redis, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=ReplicaSet, name=nspark-redis-test2-redis-ha-server-7c94c88ddc, uid=52297e7d-48e7-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=204066, selfLink=/api/v1/namespaces/zdb-redis/pods/nspark-redis-test2-redis-ha-server-7c94c88ddc-bfd4w, uid=522a92ad-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=REDIS_SENTINEL_SERVICE_HOST, value=redis-sentinel, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=redis, ports=[ContainerPort(containerPort=6379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=700Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/redis-master-data, name=data, readOnly=null, subPath=null, additionalProperties={}), VolumeMount(mountPath=/var/run/secrets/kubernetes.io/serviceaccount, name=nspark-redis-test2-redis-ha-token-d9lqp, readOnly=true, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=10.178.218.160, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/notReady, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={}), Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/unreachable, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={})], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=EmptyDirVolumeSource(medium=null, sizeLimit=null, additionalProperties={}), fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=data, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={}), Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=nspark-redis-test2-redis-ha-token-d9lqp, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=SecretVolumeSource(defaultMode=420, items=[], optional=null, secretName=nspark-redis-test2-redis-ha-token-d9lqp, additionalProperties={}), storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), status=PodStatus(conditions=[PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=Initialized, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:46Z, message=null, reason=null, status=True, type=Ready, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=PodScheduled, additionalProperties={})], containerStatuses=[ContainerStatus(containerID=docker://e5d288c7df68a221d37f992a77291a6da7821210100bf65221fdb0558dce3125, image=quay.io/smile/redis:4.0.8r0, imageID=docker-pullable://quay.io/smile/redis@sha256:1657908f7af7295529f40cfc84ae9ed0f2c24b57aa7e60feed9a84f2bb2658ec, lastState=ContainerState(running=null, terminated=null, waiting=null, additionalProperties={}), name=redis, ready=true, restartCount=0, state=ContainerState(running=ContainerStateRunning(startedAt=2018-04-26T00:18:46Z, additionalProperties={}), terminated=null, waiting=null, additionalProperties={}), additionalProperties={})], hostIP=10.178.218.160, initContainerStatuses=[], message=null, phase=Running, podIP=172.30.230.14, qosClass=Burstable, reason=null, startTime=2018-04-26T00:18:18Z, additionalProperties={}), additionalProperties={})
nspark-redis-test2-redis-ha-server-7c94c88ddc-hnrxj	Pod(apiVersion=v1, kind=Pod, metadata=ObjectMeta(annotations={kubernetes.io/created-by={"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"zdb-redis","name":"nspark-redis-test2-redis-ha-server-7c94c88ddc","uid":"52297e7d-48e7-11e8-8690-daf654bc1ef2","apiVersion":"extensions","resourceVersion":"203944"}}}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=nspark-redis-test2-redis-ha-server-7c94c88ddc-, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-server, pod-template-hash=3750744887, podIP=172.30.22.149, redis-node=true, redis-role=slave, release=nspark-redis-test2, runID=b75f68}, name=nspark-redis-test2-redis-ha-server-7c94c88ddc-hnrxj, namespace=zdb-redis, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=ReplicaSet, name=nspark-redis-test2-redis-ha-server-7c94c88ddc, uid=52297e7d-48e7-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=204046, selfLink=/api/v1/namespaces/zdb-redis/pods/nspark-redis-test2-redis-ha-server-7c94c88ddc-hnrxj, uid=5229fb6d-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=REDIS_SENTINEL_SERVICE_HOST, value=redis-sentinel, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=redis, ports=[ContainerPort(containerPort=6379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=700Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/redis-master-data, name=data, readOnly=null, subPath=null, additionalProperties={}), VolumeMount(mountPath=/var/run/secrets/kubernetes.io/serviceaccount, name=nspark-redis-test2-redis-ha-token-d9lqp, readOnly=true, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=10.178.218.185, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/notReady, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={}), Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/unreachable, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={})], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=EmptyDirVolumeSource(medium=null, sizeLimit=null, additionalProperties={}), fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=data, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={}), Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=nspark-redis-test2-redis-ha-token-d9lqp, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=SecretVolumeSource(defaultMode=420, items=[], optional=null, secretName=nspark-redis-test2-redis-ha-token-d9lqp, additionalProperties={}), storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), status=PodStatus(conditions=[PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=Initialized, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:44Z, message=null, reason=null, status=True, type=Ready, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=PodScheduled, additionalProperties={})], containerStatuses=[ContainerStatus(containerID=docker://875107094c3d8c594955e6ee4db16c3eddfca2624d28a20c3b5ebc69d64a156e, image=quay.io/smile/redis:4.0.8r0, imageID=docker-pullable://quay.io/smile/redis@sha256:1657908f7af7295529f40cfc84ae9ed0f2c24b57aa7e60feed9a84f2bb2658ec, lastState=ContainerState(running=null, terminated=null, waiting=null, additionalProperties={}), name=redis, ready=true, restartCount=0, state=ContainerState(running=ContainerStateRunning(startedAt=2018-04-26T00:18:44Z, additionalProperties={}), terminated=null, waiting=null, additionalProperties={}), additionalProperties={})], hostIP=10.178.218.185, initContainerStatuses=[], message=null, phase=Running, podIP=172.30.22.149, qosClass=Burstable, reason=null, startTime=2018-04-26T00:18:18Z, additionalProperties={}), additionalProperties={})
nspark-redis-test2-redis-ha-server-7c94c88ddc-qtl97	Pod(apiVersion=v1, kind=Pod, metadata=ObjectMeta(annotations={kubernetes.io/created-by={"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"zdb-redis","name":"nspark-redis-test2-redis-ha-server-7c94c88ddc","uid":"52297e7d-48e7-11e8-8690-daf654bc1ef2","apiVersion":"extensions","resourceVersion":"203944"}}}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=nspark-redis-test2-redis-ha-server-7c94c88ddc-, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-server, pod-template-hash=3750744887, podIP=172.30.22.147, redis-node=true, redis-role=master, release=nspark-redis-test2, runID=5aba7a}, name=nspark-redis-test2-redis-ha-server-7c94c88ddc-qtl97, namespace=zdb-redis, ownerReferences=[OwnerReference(apiVersion=extensions/v1beta1, blockOwnerDeletion=true, controller=true, kind=ReplicaSet, name=nspark-redis-test2-redis-ha-server-7c94c88ddc, uid=52297e7d-48e7-11e8-8690-daf654bc1ef2, additionalProperties={})], resourceVersion=204026, selfLink=/api/v1/namespaces/zdb-redis/pods/nspark-redis-test2-redis-ha-server-7c94c88ddc-qtl97, uid=522a86c4-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=REDIS_SENTINEL_SERVICE_HOST, value=redis-sentinel, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=redis, ports=[ContainerPort(containerPort=6379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=700Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/redis-master-data, name=data, readOnly=null, subPath=null, additionalProperties={}), VolumeMount(mountPath=/var/run/secrets/kubernetes.io/serviceaccount, name=nspark-redis-test2-redis-ha-token-d9lqp, readOnly=true, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=10.178.218.185, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/notReady, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={}), Toleration(effect=NoExecute, key=node.alpha.kubernetes.io/unreachable, operator=Exists, tolerationSeconds=300, value=null, additionalProperties={})], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=EmptyDirVolumeSource(medium=null, sizeLimit=null, additionalProperties={}), fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=data, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={}), Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=null, fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=nspark-redis-test2-redis-ha-token-d9lqp, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=SecretVolumeSource(defaultMode=420, items=[], optional=null, secretName=nspark-redis-test2-redis-ha-token-d9lqp, additionalProperties={}), storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), status=PodStatus(conditions=[PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=Initialized, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:41Z, message=null, reason=null, status=True, type=Ready, additionalProperties={}), PodCondition(lastProbeTime=null, lastTransitionTime=2018-04-26T00:18:18Z, message=null, reason=null, status=True, type=PodScheduled, additionalProperties={})], containerStatuses=[ContainerStatus(containerID=docker://8ec3e9fc9b86a5344ce790140dd4fa3bf7af588c6ab1321a55143cfa4f9bc439, image=quay.io/smile/redis:4.0.8r0, imageID=docker-pullable://quay.io/smile/redis@sha256:1657908f7af7295529f40cfc84ae9ed0f2c24b57aa7e60feed9a84f2bb2658ec, lastState=ContainerState(running=null, terminated=null, waiting=null, additionalProperties={}), name=redis, ready=true, restartCount=0, state=ContainerState(running=ContainerStateRunning(startedAt=2018-04-26T00:18:41Z, additionalProperties={}), terminated=null, waiting=null, additionalProperties={}), additionalProperties={})], hostIP=10.178.218.185, initContainerStatuses=[], message=null, phase=Running, podIP=172.30.22.147, qosClass=Burstable, reason=null, startTime=2018-04-26T00:18:18Z, additionalProperties={}), additionalProperties={})


nspark-redis-test2-redis-ha-sentinel	Deployment(apiVersion=extensions/v1beta1, kind=Deployment, metadata=ObjectMeta(annotations={deployment.kubernetes.io/revision=1}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=1, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=nspark-redis-test2-redis-ha-sentinel, release=nspark-redis-test2}, name=nspark-redis-test2-redis-ha-sentinel, namespace=zdb-redis, ownerReferences=[], resourceVersion=204065, selfLink=/apis/extensions/v1beta1/namespaces/zdb-redis/deployments/nspark-redis-test2-redis-ha-sentinel, uid=52281275-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=DeploymentSpec(minReadySeconds=null, paused=null, progressDeadlineSeconds=null, replicas=3, revisionHistoryLimit=null, rollbackTo=null, selector=LabelSelector(matchExpressions=[], matchLabels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=nspark-redis-test2-redis-ha-sentinel, release=nspark-redis-test2}, additionalProperties={}), strategy=DeploymentStrategy(rollingUpdate=RollingUpdateDeployment(maxSurge=IntOrString(IntVal=1, Kind=null, StrVal=null, additionalProperties={}), maxUnavailable=IntOrString(IntVal=1, Kind=null, StrVal=null, additionalProperties={}), additionalProperties={}), type=RollingUpdate, additionalProperties={}), template=PodTemplateSpec(metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=null, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=nspark-redis-test2-redis-ha-sentinel, release=nspark-redis-test2}, name=null, namespace=null, ownerReferences=[], resourceVersion=null, selfLink=null, uid=null, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=SENTINEL, value=true, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=sentinel, ports=[ContainerPort(containerPort=26379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=null, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[], volumes=[], additionalProperties={}), additionalProperties={}), additionalProperties={}), status=DeploymentStatus(availableReplicas=3, collisionCount=null, conditions=[DeploymentCondition(lastTransitionTime=2018-04-26T00:18:44Z, lastUpdateTime=2018-04-26T00:18:44Z, message=Deployment has minimum availability., reason=MinimumReplicasAvailable, status=True, type=Available, additionalProperties={})], observedGeneration=1, readyReplicas=3, replicas=3, unavailableReplicas=null, updatedReplicas=3, additionalProperties={}), additionalProperties={})
nspark-redis-test2-redis-ha-server	Deployment(apiVersion=extensions/v1beta1, kind=Deployment, metadata=ObjectMeta(annotations={deployment.kubernetes.io/revision=1}, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=1, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-server, redis-node=true, release=nspark-redis-test2}, name=nspark-redis-test2-redis-ha-server, namespace=zdb-redis, ownerReferences=[], resourceVersion=204058, selfLink=/apis/extensions/v1beta1/namespaces/zdb-redis/deployments/nspark-redis-test2-redis-ha-server, uid=5228f5b9-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=DeploymentSpec(minReadySeconds=null, paused=null, progressDeadlineSeconds=null, replicas=3, revisionHistoryLimit=null, rollbackTo=null, selector=LabelSelector(matchExpressions=[], matchLabels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-server, redis-node=true, release=nspark-redis-test2}, additionalProperties={}), strategy=DeploymentStrategy(rollingUpdate=RollingUpdateDeployment(maxSurge=IntOrString(IntVal=1, Kind=null, StrVal=null, additionalProperties={}), maxUnavailable=IntOrString(IntVal=1, Kind=null, StrVal=null, additionalProperties={}), additionalProperties={}), type=RollingUpdate, additionalProperties={}), template=PodTemplateSpec(metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=null, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-server, redis-node=true, release=nspark-redis-test2}, name=null, namespace=null, ownerReferences=[], resourceVersion=null, selfLink=null, uid=null, additionalProperties={}), spec=PodSpec(activeDeadlineSeconds=null, affinity=null, automountServiceAccountToken=null, containers=[Container(args=[], command=[], env=[EnvVar(name=REDIS_SENTINEL_SERVICE_HOST, value=redis-sentinel, valueFrom=null, additionalProperties={}), EnvVar(name=REDIS_CHART_PREFIX, value=nspark-redis-test2-redis-ha-, valueFrom=null, additionalProperties={})], envFrom=[], image=quay.io/smile/redis:4.0.8r0, imagePullPolicy=IfNotPresent, lifecycle=null, livenessProbe=null, name=redis, ports=[ContainerPort(containerPort=6379, hostIP=null, hostPort=null, name=null, protocol=TCP, additionalProperties={})], readinessProbe=null, resources=ResourceRequirements(limits={memory=Quantity(amount=700Mi, format=null, additionalProperties={})}, requests={cpu=Quantity(amount=100m, format=null, additionalProperties={}), memory=Quantity(amount=200Mi, format=null, additionalProperties={})}, additionalProperties={}), securityContext=null, stdin=null, stdinOnce=null, terminationMessagePath=/dev/termination-log, terminationMessagePolicy=File, tty=null, volumeMounts=[VolumeMount(mountPath=/redis-master-data, name=data, readOnly=null, subPath=null, additionalProperties={})], workingDir=null, additionalProperties={})], dnsPolicy=ClusterFirst, hostAliases=[], hostIPC=null, hostNetwork=null, hostPID=null, hostname=null, imagePullSecrets=[], initContainers=[], nodeName=null, nodeSelector=null, restartPolicy=Always, schedulerName=default-scheduler, securityContext=PodSecurityContext(fsGroup=null, runAsNonRoot=null, runAsUser=null, seLinuxOptions=null, supplementalGroups=[], additionalProperties={}), serviceAccount=nspark-redis-test2-redis-ha, serviceAccountName=nspark-redis-test2-redis-ha, subdomain=null, terminationGracePeriodSeconds=30, tolerations=[], volumes=[Volume(awsElasticBlockStore=null, azureDisk=null, azureFile=null, cephfs=null, cinder=null, configMap=null, downwardAPI=null, emptyDir=EmptyDirVolumeSource(medium=null, sizeLimit=null, additionalProperties={}), fc=null, flexVolume=null, flocker=null, gcePersistentDisk=null, gitRepo=null, glusterfs=null, hostPath=null, iscsi=null, name=data, nfs=null, persistentVolumeClaim=null, photonPersistentDisk=null, portworxVolume=null, projected=null, quobyte=null, rbd=null, scaleIO=null, secret=null, storageos=null, vsphereVolume=null, additionalProperties={})], additionalProperties={}), additionalProperties={}), additionalProperties={}), status=DeploymentStatus(availableReplicas=3, collisionCount=null, conditions=[DeploymentCondition(lastTransitionTime=2018-04-26T00:18:44Z, lastUpdateTime=2018-04-26T00:18:44Z, message=Deployment has minimum availability., reason=MinimumReplicasAvailable, status=True, type=Available, additionalProperties={})], observedGeneration=1, readyReplicas=3, replicas=3, unavailableReplicas=null, updatedReplicas=3, additionalProperties={}), additionalProperties={})


nspark-redis-test2-redis-ha-master-svc	Service(apiVersion=v1, kind=Service, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels=null, name=nspark-redis-test2-redis-ha-master-svc, namespace=zdb-redis, ownerReferences=[], resourceVersion=203928, selfLink=/api/v1/namespaces/zdb-redis/services/nspark-redis-test2-redis-ha-master-svc, uid=5223a8a5-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=ServiceSpec(clusterIP=172.21.196.151, externalIPs=[], externalName=null, externalTrafficPolicy=null, healthCheckNodePort=null, loadBalancerIP=null, loadBalancerSourceRanges=[], ports=[ServicePort(name=null, nodePort=null, port=6379, protocol=TCP, targetPort=IntOrString(IntVal=6379, Kind=null, StrVal=null, additionalProperties={}), additionalProperties={})], selector={app=redis-ha, redis-node=true, redis-role=master, release=nspark-redis-test2}, sessionAffinity=None, type=ClusterIP, additionalProperties={}), status=ServiceStatus(loadBalancer=LoadBalancerStatus(ingress=[], additionalProperties={}), additionalProperties={}), additionalProperties={})
nspark-redis-test2-redis-ha-sentinel	Service(apiVersion=v1, kind=Service, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels={app=redis-ha, chart=redis-ha-2.1.1, heritage=Tiller, name=redis-ha-sentinel-svc, release=nspark-redis-test2, role=service}, name=nspark-redis-test2-redis-ha-sentinel, namespace=zdb-redis, ownerReferences=[], resourceVersion=203932, selfLink=/api/v1/namespaces/zdb-redis/services/nspark-redis-test2-redis-ha-sentinel, uid=5225b24b-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=ServiceSpec(clusterIP=172.21.142.197, externalIPs=[], externalName=null, externalTrafficPolicy=null, healthCheckNodePort=null, loadBalancerIP=null, loadBalancerSourceRanges=[], ports=[ServicePort(name=null, nodePort=null, port=26379, protocol=TCP, targetPort=IntOrString(IntVal=26379, Kind=null, StrVal=null, additionalProperties={}), additionalProperties={})], selector={chart=redis-ha-2.1.1, heritage=Tiller, redis-role=sentinel, release=nspark-redis-test2}, sessionAffinity=None, type=ClusterIP, additionalProperties={}), status=ServiceStatus(loadBalancer=LoadBalancerStatus(ingress=[], additionalProperties={}), additionalProperties={}), additionalProperties={})
nspark-redis-test2-redis-ha-slave-svc	Service(apiVersion=v1, kind=Service, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-04-26T00:18:18Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels=null, name=nspark-redis-test2-redis-ha-slave-svc, namespace=zdb-redis, ownerReferences=[], resourceVersion=203936, selfLink=/api/v1/namespaces/zdb-redis/services/nspark-redis-test2-redis-ha-slave-svc, uid=522772c0-48e7-11e8-8690-daf654bc1ef2, additionalProperties={}), spec=ServiceSpec(clusterIP=172.21.104.238, externalIPs=[], externalName=null, externalTrafficPolicy=null, healthCheckNodePort=null, loadBalancerIP=null, loadBalancerSourceRanges=[], ports=[ServicePort(name=null, nodePort=null, port=6379, protocol=TCP, targetPort=IntOrString(IntVal=6379, Kind=null, StrVal=null, additionalProperties={}), additionalProperties={})], selector={app=redis-ha, redis-node=true, redis-role=slave, release=nspark-redis-test2}, sessionAffinity=None, type=ClusterIP, additionalProperties={}), status=ServiceStatus(loadBalancer=LoadBalancerStatus(ingress=[], additionalProperties={}), additionalProperties={}), additionalProperties={})



----------
Redis 서비스 체크 포인트
Deployments (2)
Pods (6)
Replica SEts (2)
Services (3)

Event
------------------------------------------
redis-data-zdb-redis-guestbook-master-0.1526e70a8c89aa99	Event(apiVersion=v1, count=76646, firstTimestamp=2018-04-19T17:39:16Z, involvedObject=ObjectReference(apiVersion=v1, fieldPath=null, kind=PersistentVolumeClaim, name=redis-data-zdb-redis-guestbook-master-0, namespace=redis, resourceVersion=84805, uid=61e1c2a1-43b2-11e8-b41c-feb7cdf59290, additionalProperties={}), kind=Event, lastTimestamp=2018-05-03T00:54:23Z, message=no persistent volumes available for this claim and no storage class is set, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-04-19T17:39:16Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels=null, name=redis-data-zdb-redis-guestbook-master-0.1526e70a8c89aa99, namespace=redis, ownerReferences=[], resourceVersion=407644, selfLink=/api/v1/namespaces/redis/events/redis-data-zdb-redis-guestbook-master-0.1526e70a8c89aa99, uid=94e947c9-43f8-11e8-8690-daf654bc1ef2, additionalProperties={}), reason=FailedBinding, source=EventSource(component=persistentvolume-controller, host=null, additionalProperties={}), type=Normal, additionalProperties={})
mariadb89-test-5f9f49c6b4-p5qwj.152ad68b220ebf73	Event(apiVersion=v1, count=3041, firstTimestamp=2018-05-02T13:21:56Z, involvedObject=ObjectReference(apiVersion=v1, fieldPath=spec.initContainers{copy-custom-config}, kind=Pod, name=mariadb89-test-5f9f49c6b4-p5qwj, namespace=zdb-maria, resourceVersion=393828, uid=c7a016f9-4e0b-11e8-8690-daf654bc1ef2, additionalProperties={}), kind=Event, lastTimestamp=2018-05-03T00:31:55Z, message=Back-off restarting failed container, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-05-02T13:21:56Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels=null, name=mariadb89-test-5f9f49c6b4-p5qwj.152ad68b220ebf73, namespace=zdb-maria, ownerReferences=[], resourceVersion=407203, selfLink=/api/v1/namespaces/zdb-maria/events/mariadb89-test-5f9f49c6b4-p5qwj.152ad68b220ebf73, uid=c99c0286-4e0b-11e8-8690-daf654bc1ef2, additionalProperties={}), reason=BackOff, source=EventSource(component=kubelet, host=10.178.218.185, additionalProperties={}), type=Warning, additionalProperties={})
mariadb89-test-5f9f49c6b4-p5qwj.152ad68b220fa42b	Event(apiVersion=v1, count=3134, firstTimestamp=2018-05-02T13:21:56Z, involvedObject=ObjectReference(apiVersion=v1, fieldPath=null, kind=Pod, name=mariadb89-test-5f9f49c6b4-p5qwj, namespace=zdb-maria, resourceVersion=393828, uid=c7a016f9-4e0b-11e8-8690-daf654bc1ef2, additionalProperties={}), kind=Event, lastTimestamp=2018-05-03T00:51:59Z, message=Error syncing pod, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-05-02T13:21:56Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels=null, name=mariadb89-test-5f9f49c6b4-p5qwj.152ad68b220fa42b, namespace=zdb-maria, ownerReferences=[], resourceVersion=407601, selfLink=/api/v1/namespaces/zdb-maria/events/mariadb89-test-5f9f49c6b4-p5qwj.152ad68b220fa42b, uid=c99b4d9b-4e0b-11e8-8690-daf654bc1ef2, additionalProperties={}), reason=FailedSync, source=EventSource(component=kubelet, host=10.178.218.185, additionalProperties={}), type=Warning, additionalProperties={})
zdb-dev-db-mariadb-loadbalancer.152928f3e52e4f89	Event(apiVersion=v1, count=1718, firstTimestamp=2018-04-27T02:09:36Z, involvedObject=ObjectReference(apiVersion=v1, fieldPath=null, kind=Service, name=zdb-dev-db-mariadb-loadbalancer, namespace=zdb, resourceVersion=234974, uid=08fee6ed-49c0-11e8-8690-daf654bc1ef2, additionalProperties={}), kind=Event, lastTimestamp=2018-05-03T00:50:33Z, message=Ensuring load balancer, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-04-27T02:09:36Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels=null, name=zdb-dev-db-mariadb-loadbalancer.152928f3e52e4f89, namespace=zdb, ownerReferences=[], resourceVersion=407570, selfLink=/api/v1/namespaces/zdb/events/zdb-dev-db-mariadb-loadbalancer.152928f3e52e4f89, uid=08ff727d-49c0-11e8-8690-daf654bc1ef2, additionalProperties={}), reason=EnsuringLoadBalancer, source=EventSource(component=service-controller, host=null, additionalProperties={}), type=Normal, additionalProperties={})
zdb-dev-db-mariadb-loadbalancer.152928f3e69981b3	Event(apiVersion=v1, count=1718, firstTimestamp=2018-04-27T02:09:36Z, involvedObject=ObjectReference(apiVersion=v1, fieldPath=null, kind=Service, name=zdb-dev-db-mariadb-loadbalancer, namespace=zdb, resourceVersion=234974, uid=08fee6ed-49c0-11e8-8690-daf654bc1ef2, additionalProperties={}), kind=Event, lastTimestamp=2018-05-03T00:50:33Z, message=Error on cloud load balancer a08fee6ed49c011e88690daf654bc1ef for service zdb/zdb-dev-db-mariadb-loadbalancer with UID 08fee6ed-49c0-11e8-8690-daf654bc1ef2: Requested cloud provider IP 169.56.70.222 is not available. The following cloud provider IPs are available: 169.56.70.219,169.56.70.220,169.56.70.221, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-04-27T02:09:36Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels=null, name=zdb-dev-db-mariadb-loadbalancer.152928f3e69981b3, namespace=zdb, ownerReferences=[], resourceVersion=407571, selfLink=/api/v1/namespaces/zdb/events/zdb-dev-db-mariadb-loadbalancer.152928f3e69981b3, uid=0902e3db-49c0-11e8-8690-daf654bc1ef2, additionalProperties={}), reason=CreatingCloudLoadBalancerFailed, source=EventSource(component=ibm-cloud-provider, host=null, additionalProperties={}), type=Warning, additionalProperties={})
zdb-dev-db-phpmyadmin-loadbalancer.152938d8c590c3f8	Event(apiVersion=v1, count=1660, firstTimestamp=2018-04-27T07:00:52Z, involvedObject=ObjectReference(apiVersion=v1, fieldPath=null, kind=Service, name=zdb-dev-db-phpmyadmin-loadbalancer, namespace=zdb, resourceVersion=240668, uid=b951c4f3-49e8-11e8-8690-daf654bc1ef2, additionalProperties={}), kind=Event, lastTimestamp=2018-05-03T00:51:45Z, message=Ensuring load balancer, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-04-27T07:00:52Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels=null, name=zdb-dev-db-phpmyadmin-loadbalancer.152938d8c590c3f8, namespace=zdb, ownerReferences=[], resourceVersion=407595, selfLink=/api/v1/namespaces/zdb/events/zdb-dev-db-phpmyadmin-loadbalancer.152938d8c590c3f8, uid=b9523df0-49e8-11e8-8690-daf654bc1ef2, additionalProperties={}), reason=EnsuringLoadBalancer, source=EventSource(component=service-controller, host=null, additionalProperties={}), type=Normal, additionalProperties={})
zdb-dev-db-phpmyadmin-loadbalancer.152938d8c6fa0d4a	Event(apiVersion=v1, count=1660, firstTimestamp=2018-04-27T07:00:52Z, involvedObject=ObjectReference(apiVersion=v1, fieldPath=null, kind=Service, name=zdb-dev-db-phpmyadmin-loadbalancer, namespace=zdb, resourceVersion=240668, uid=b951c4f3-49e8-11e8-8690-daf654bc1ef2, additionalProperties={}), kind=Event, lastTimestamp=2018-05-03T00:51:45Z, message=Error on cloud load balancer ab951c4f349e811e88690daf654bc1ef for service zdb/zdb-dev-db-phpmyadmin-loadbalancer with UID b951c4f3-49e8-11e8-8690-daf654bc1ef2: Requested cloud provider IP 169.56.70.222 is not available. The following cloud provider IPs are available: 169.56.70.219,169.56.70.220,169.56.70.221, metadata=ObjectMeta(annotations=null, clusterName=null, creationTimestamp=2018-04-27T07:00:52Z, deletionGracePeriodSeconds=null, deletionTimestamp=null, finalizers=[], generateName=null, generation=null, initializers=null, labels=null, name=zdb-dev-db-phpmyadmin-loadbalancer.152938d8c6fa0d4a, namespace=zdb, ownerReferences=[], resourceVersion=407596, selfLink=/api/v1/namespaces/zdb/events/zdb-dev-db-phpmyadmin-loadbalancer.152938d8c6fa0d4a, uid=b955cc48-49e8-11e8-8690-daf654bc1ef2, additionalProperties={}), reason=CreatingCloudLoadBalancerFailed, source=EventSource(component=ibm-cloud-provider, host=null, additionalProperties={}), type=Warning, additionalProperties={})







